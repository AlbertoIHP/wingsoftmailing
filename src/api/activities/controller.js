import { success, notFound } from '../../services/response/'
import { Activities } from '.'
import { sendMail } from '../../services/sendgrid'

export const create = ({ bodymen: { body } }, res, next) =>
  Activities.create(body)
    .then((activities) => {

      let newContact = activities.view(true)
      console.log(newContact)

      let topic = newContact.topic === '1' ? 'Growth Hacking' : 'Desarrollo Móvil'

      let email = 'hola@wingsoft.com'
      let subject = topic+':  '+newContact.email+', necesita una evaluación.'
      //Mailing
      const content = `
        Hola soy ${newContact.name}, vi la pagina de ${topic}.<br><br>
        Estoy interesado en obtener una evaluación para la compañia ${newContact.bussinessName}, en la seccion de ${newContact.bussinessArea}. <br>
        Mi correo es ${newContact.email}, y mi numero ${newContact.phone} para que puedas ponerte en contacto cuanto antes conmigo.<br><br>`

      email = 'fmoya@wingsoft.com'

      let mail3 =sendMail({ toEmail: email, subject: subject, content: content })
      let mail = sendMail({ toEmail: email, subject: subject, content: content })



      // Mail for contact
      topic = newContact.topic === '1' ? 'Growth Hacking' : 'Desarrollo Mobil'
      email = newContact.email
      subject = `${newContact.name}, pronto nos pondremos en contacto contigo por ${topic}.`
      //Mailing
      const content2 = `
<html lang="en">
<head>



  <style type="text/css">

/* This stylesheet generated by Transfonter (https://transfonter.org) on June 14, 2017 3:05 PM */

@font-face {
    font-family: 'Open Sans semi bold';
    src: url('../fonts/OpenSans/OpenSans-Semibold.eot');
    src: url('../fonts/OpenSans/OpenSans-Semibold.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-Semibold.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-Semibold.ttf') format('truetype');
    font-weight: 600;
    font-style: normal;
}

@font-face {
    font-family: 'Open Sans bold italic';
    src: url('../fonts/OpenSans/OpenSans-BoldItalic.eot');
    src: url('../fonts/OpenSans/OpenSans-BoldItalic.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-BoldItalic.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-BoldItalic.ttf') format('truetype');
    font-weight: bold;
    font-style: italic;
}

@font-face {
    font-family: 'Open Sans light italic';
    src: url('../fonts/OpenSans/OpenSansLight-Italic.eot');
    src: url('../fonts/OpenSans/OpenSansLight-Italic.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSansLight-Italic.woff') format('woff'),
        url('../fonts/OpenSans/OpenSansLight-Italic.ttf') format('truetype');
    font-weight: 300;
    font-style: italic;
}

@font-face {
    font-family: 'Open Sans';
    src: url('../fonts/OpenSans/OpenSans.eot');
    src: url('../fonts/OpenSans/OpenSans.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Open Sans light';
    src: url('../fonts/OpenSans/OpenSans-Light.eot');
    src: url('../fonts/OpenSans/OpenSans-Light.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-Light.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-Light.ttf') format('truetype');
    font-weight: 300;
    font-style: normal;
}

@font-face {
    font-family: 'Open Sans extrabold italic';
    src: url('../fonts/OpenSans/OpenSans-ExtraboldItalic.eot');
    src: url('../fonts/OpenSans/OpenSans-ExtraboldItalic.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-ExtraboldItalic.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-ExtraboldItalic.ttf') format('truetype');
    font-weight: 800;
    font-style: italic;
}

@font-face {
    font-family: 'Open Sans extrabold';
    src: url('../fonts/OpenSans/OpenSans-Extrabold.eot');
    src: url('../fonts/OpenSans/OpenSans-Extrabold.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-Extrabold.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-Extrabold.ttf') format('truetype');
    font-weight: 800;
    font-style: normal;
}

@font-face {
    font-family: 'Open Sans semibold italic';
    src: url('../fonts/OpenSans/OpenSans-SemiboldItalic.eot');
    src: url('../fonts/OpenSans/OpenSans-SemiboldItalic.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-SemiboldItalic.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-SemiboldItalic.ttf') format('truetype');
    font-weight: 600;
    font-style: italic;
}

@font-face {
    font-family: 'Open Sans italic';
    src: url('../fonts/OpenSans/OpenSans-Italic.eot');
    src: url('../fonts/OpenSans/OpenSans-Italic.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-Italic.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-Italic.ttf') format('truetype');
    font-weight: normal;
    font-style: italic;
}

@font-face {
    font-family: 'Open Sans bold';
    src: url('../fonts/OpenSans/OpenSans-Bold.eot');
    src: url('../fonts/OpenSans/OpenSans-Bold.eot?#iefix') format('embedded-opentype'),
        url('../fonts/OpenSans/OpenSans-Bold.woff') format('woff'),
        url('../fonts/OpenSans/OpenSans-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}



/*general*/
*, .project-title{
  font-family: 'Open Sans', sans-serif;
}
a{
  transition: 0.3s;
  -webkit-transition: 0.3s;
  color: #60c99a;
}
a:hover{
  text-decoration: none;
  color: #60c99a;
}
a:focus{
  text-decoration: none;
}

h1, h2, h3, h4, h5, h6{
  text-transform: inherit;
}
h4{
  letter-spacing: 0px;
}
h6{
  letter-spacing: 0px;
}
p{
  font-size: 16px;
}

.main-banner{
  background-image: url(https://s3-sa-east-1.amazonaws.com/picsconectikids/main-banner.png);
  background-size:cover;
  background-position: bottom;
  height: 74vh;
  width: 100%;
  position: relative;
  top: 2em;
  background-repeat: no-repeat;
}

.info-section .common-box{
  padding: 0 17em 4em;
}

.info-section .common-box h3, .info-section .common-box p, .info-section .common-box a{
  color: #5E605F;
}

.info-section .common-box p{
  white-space: pre-line;
  font-size: 24px;
  line-height: 1.15;
}

.info-section .common-box span{
  font-family: 'Open Sans', sans-serif;
  font-weight: bold;
  color: #595B58;
}

.info-section .common-box__figure img{
  width: 10em;
}

.footer-banner{
  background-image: url(https://s3-sa-east-1.amazonaws.com/picsconectikids/footer-banner.jpg);
  background-size:cover;
  background-position: bottom;
  height: 20vh;
  width: 100%;
  position: relative;
  background-repeat: no-repeat;
  padding: 80px 0 0;  
}

.footer-banner .common-box__figure{
  text-align: center;
}

.footer-banner .common-box__figure img{
  width: 13em;
}


@media(max-width: 1366px){
  .main-banner{
    height: 48vh;
  }
  .footer-banner{
    height: 24vh;
  } 
}

@media (max-width: 1024px){
  .main-banner{
    height: 62vh;
  }
  .info-section .common-box {
      padding: 0 10em 4em;
  }
  .footer-banner{
    height: 26vh;
  }
}

@media (max-width: 900px){
  .main-banner{
    height: 92vh;
  }
  .info-section .common-box {
      padding: 0 2em 4em;
  }
  .footer-banner{
    height: 45vh;
  }
}

@media (max-width: 800px){
  .main-banner {
      height: 34vh;
  }
  .footer-banner{
    height: 20vh;
  } 
}

@media (max-width: 767px){
  .info-section .common-box{
    padding: 0 4em 4em;
  }
}

@media (max-width: 736px){
  .main-banner{
    height: 80vh;
  }
  .info-section .common-box {
      padding: 0 2em 4em;
  }
  .footer-banner{
    height: 45vh;
  }
}

@media (max-width: 667px){
  .info-section .common-box {
      padding: 0 0 4em;
  }
}

@media (max-width: 640px){
  .info-section .common-box {
      padding: 0 0 4em;
  }
  .footer-banner{
    height: 48vh;
  }
}

@media (max-width: 600px){  
  .info-section .common-box p {
      font-size: 21px;
  }
  .info-section .common-box__figure img {
      width: 8em;
  }
  .footer-banner{
    height: 55vh;
  }
}

@media (max-width: 450px){
  .main-banner{
    height: 23vh;
    top: 1em;
  }
  .info-section .common-box {
      padding: 0 0 4em;
  }
  .info-section .common-box p {
      font-size: 24px;
  }
  .footer-banner{
    height: 26vh;
  } 
}

@media (max-width: 375px){
  .main-banner {
      height: 22vh;
      top: 1em;
  }
  .info-section .common-box {
      padding: 0 0 4em;
  }
  .info-section .common-box p{
    font-size: 21px;
  }
  .footer-banner{
    height: 25vh;
    padding: 70px 0 0;
  }
  .footer-banner .common-box__figure img {
      width: 11em;
  }
}

@media (max-width: 320px){
  .info-section .common-box h3, .info-section .common-box p{
    font-size: 19px;
  }
  .info-section .common-box__figure img {
      width: 8em;
  }
  .footer-banner .common-box__figure img {
      width: 10em;
  }
}

  </style>


</head>
<body>
    
  <header class="main-banner"></header>

  <section class="info-section">
    <div style=" text-align: center">
      <div class="row">
        <div class="col-sm-12">
          <div class="common-box">
            <h3>¡Hola Bárbara!</h3>
            <p>
              En Wingsoft, queremos brindarte <span>la mejor experiencia</span>
              en todo el proceso que va desde la solicitud de evaluación
              hasta el desarrolo de tu proyecto.

              Es por eso que te contactaremos para poder hacer un 
              levantamiento de la información necesaria para entregar
              una evaluación de tu proyecto, que contemple todos los
              alcances necesarios.

              Para que sea más cómodo para ti, tenemos dos opciones.
              Vía Email o Vía Teléfono, si tu opción es vía Email no es
              necesario que respondas este email. Si es por teléfono, te
              invitamos a agendar un horario que te acomode aquí:
              <a href="https://bit.ly/2HwUCIZ">https://bit.ly/2HwUCIZ</a>

              Te deseamos un gran día. 
            </p>
          </div>
          <div class="common-box text-center">
            <div class="common-box__figure">
              <figure>
                <img src="https://s3-sa-east-1.amazonaws.com/picsconectikids/barbara.png" alt="">
              </figure>
            </div>
            <p>Atte Equipo De Experiencia</p>
            <div class="common-box__figure">
              <figure>
                <img src="https://s3-sa-east-1.amazonaws.com/picsconectikids/Layer-6.png" alt="">
              </figure>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
   
  <footer class="footer-banner">
    <div class="container">
      <div class="row">
        <div class="col-sm-12">
          <figure class="common-box__figure">
            <img src="https://s3-sa-east-1.amazonaws.com/picsconectikids/logo-ws.png" alt="">  
          </figure>
        </div>
      </div>
    </div>
  </footer>
        
  <script src="public/js/jquery-3.1.1.min.js" integrity=""></script>
  <script src="public/js/bootstrap.min.js" integrity=""></script>
  <script src="public/js/main.js" integrity=""></script> 
  <!-- END CHATBOT -->
</body>
</html>

      `



      console.log(content2)


      let mail2 = sendMail({ toEmail: email, subject: subject, content: content2 })

      let resultMailing = mail && mail2 && mail3










      return { activities: activities.view(true), emailSended: resultMailing }
    })
    .then(success(res, 201))
    .catch(next)

export const index = ({ querymen: { query, select, cursor } }, res, next) =>
  Activities.count(query)
    .then(count => Activities.find(query, select, cursor)
      .then((activities) => ({
        count,
        rows: activities.map((activities) => activities.view())
      }))
    )
    .then(success(res))
    .catch(next)

export const show = ({ params }, res, next) =>
  Activities.findById(params.id)
    .then(notFound(res))
    .then((activities) => activities ? activities.view() : null)
    .then(success(res))
    .catch(next)

export const update = ({ bodymen: { body }, params }, res, next) =>
  Activities.findById(params.id)
    .then(notFound(res))
    .then((activities) => activities ? Object.assign(activities, body).save() : null)
    .then((activities) => activities ? activities.view(true) : null)
    .then(success(res))
    .catch(next)

export const destroy = ({ params }, res, next) =>
  Activities.findById(params.id)
    .then(notFound(res))
    .then((activities) => activities ? activities.remove() : null)
    .then(success(res, 204))
    .catch(next)
